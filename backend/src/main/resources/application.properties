spring.application.name=OWL App
# Server Configuration
server.servlet.context-path=/owl

# ========================================
# 主要資料庫 - Oracle (Tiptop ERP)
# ========================================
# Oracle 作為主要資料源，使用 spring.datasource.oracle 前綴
spring.datasource.oracle.url=jdbc:oracle:thin:@192.168.10.21:1521:topprod
spring.datasource.oracle.username=${ORACLE_USERNAME:tw}
spring.datasource.oracle.password=${ORACLE_PASSWORD:tw}
spring.datasource.oracle.driver-class-name=oracle.jdbc.OracleDriver

# Oracle 連線池設定
spring.datasource.oracle.hikari.minimum-idle=5
spring.datasource.oracle.hikari.maximum-pool-size=20
spring.datasource.oracle.hikari.connection-timeout=30000
spring.datasource.oracle.hikari.idle-timeout=600000
spring.datasource.oracle.hikari.max-lifetime=1800000
spring.datasource.oracle.hikari.connection-test-query=SELECT 1 FROM DUAL

# ========================================
# H2 資料庫 - OWL Knowledge Base
# ========================================
# H2 用於儲存轉換後的 OWL 資料
# 開發環境使用記憶體模式，生產環境應改為檔案模式
# 改為檔案模式，資料將持久化儲存
# spring.datasource.h2.url=jdbc:h2:file:./data/owldb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=Oracle;AUTO_SERVER=TRUE
spring.datasource.h2.url=jdbc:h2:file:./data/owldb;DB_CLOSE_DELAY=-1;MODE=Oracle
# 舊的記憶體模式（註解掉）
#spring.datasource.h2.url=${H2_URL:jdbc:h2:mem:owldb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=Oracle}
# 生產環境建議使用：
# spring.datasource.h2.url=jdbc:h2:file:./data/owldb;DB_CLOSE_DELAY=-1;JPA_SHOW_SQLDB_CLOSE_ON_EXIT=FALSE;MODE=Oracle
spring.datasource.h2.driver-class-name=org.h2.Driver
spring.datasource.h2.username=sa
spring.datasource.h2.password=${H2_PASSWORD:}

# H2 連線池設定
spring.datasource.h2.hikari.minimum-idle=5
spring.datasource.h2.hikari.maximum-pool-size=20
spring.datasource.h2.hikari.connection-timeout=20000

# H2 效能優化設定
spring.datasource.h2.hikari.connection-init-sql=SET CACHE_SIZE 131072;SET LOCK_TIMEOUT 10000;SET WRITE_DELAY 500

# ========================================
# MSSQL 資料庫 - HRM 系統
# ========================================
spring.datasource.mssql.url=jdbc:sqlserver://192.168.10.23:1433;DatabaseName=HRMDB;encrypt=false;trustServerCertificate=false
spring.datasource.mssql.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.mssql.username=${MSSQL_USERNAME:sa}
spring.datasource.mssql.password=${MSSQL_PASSWORD:dsc@12345}

# MSSQL 連線池設定
spring.datasource.mssql.hikari.minimum-idle=3
spring.datasource.mssql.hikari.maximum-pool-size=15
spring.datasource.mssql.hikari.connection-timeout=30000

# ========================================
# JPA 通用設定
# ========================================
# 因為 Oracle 是主要資料庫，設定 Oracle 方言
# spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
# 為多資料源設定特定方言
# Oracle-specific JPA settings
spring.jpa.properties.hibernate.oracle.dialect=org.hibernate.dialect.Oracle12cDialect
# H2-specific JPA settings  
spring.jpa.properties.hibernate.h2.dialect=org.hibernate.dialect.H2Dialect

# DDL 自動處理模式
# 開發環境可用 create-drop 或 update，生產環境必須用 validate 或 none
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:none}

# SQL 顯示設定
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.open-in-view=false

# ========================================
# JPA Memory Optimization 記憶體優化設定
# ========================================
spring.jpa.properties.hibernate.query.plan_cache_max_size=64
spring.jpa.properties.hibernate.query.plan_parameter_metadata_max_size=32
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# ========================================
# H2 特定設定
# ========================================
# H2 Console 設定（生產環境應關閉）
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=${H2_CONSOLE_ALLOW_OTHERS:true}

# H2 資料庫初始化
spring.sql.init.mode=${SQL_INIT_MODE:always}
spring.sql.init.platform=h2
spring.sql.init.schema-locations=classpath:schema-h2.sql
spring.sql.init.data-locations=classpath:data-h2.sql
spring.sql.init.continue-on-error=true

# ========================================
# Hibernate 日誌設定
# ========================================
logging.level.org.hibernate.SQL=${LOG_HIBERNATE_SQL:DEBUG}
logging.level.org.hibernate.orm.jdbc.bind=${LOG_HIBERNATE_BIND:TRACE}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.type.descriptor.sql=TRACE

# ========================================
# Spring Security & LDAP 日誌
# ========================================
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.ldap=DEBUG
logging.level.org.springframework.security.ldap=TRACE

# ========================================
# OWL 應用程式設定
# ========================================
owl.ontology.base-path=./ontologies
tiptop.owl.export.path=./owl-exports

# Knowledge Base 管理設定
owl.knowledge.base.cleanup.days=90
owl.knowledge.base.refresh.days=30
owl.knowledge.base.quality.threshold=0.7
owl.knowledge.base.hydraulic.cylinder.prefix=3,4

# ========================================
# OWL Reasoning Memory Optimization 推理記憶體優化
# ========================================
# Maximum model size (number of statements) before switching to lightweight reasoner
owl.reasoning.max-model-size=50000
# Maximum inferred statements to process
owl.reasoning.max-inferred-statements=5000
# Enable lightweight reasoner by default
owl.reasoning.use-lightweight-reasoner=true
# Disable statement caching to save memory
owl.reasoning.enable-statement-caching=false
# Reasoning timeout in seconds
owl.reasoning.timeout-seconds=120
# Enable automatic reasoner downgrade for large models
owl.reasoning.auto-downgrade.enabled=true
owl.reasoning.auto-downgrade.threshold=20000

# Reasoner specific limits
owl.reasoning.owl-reasoner.max-statements=20000
owl.reasoning.owl-mini-reasoner.max-statements=50000
owl.reasoning.owl-micro-reasoner.max-statements=100000
owl.reasoning.rdfs-reasoner.max-statements=200000

# ========================================
# Hydraulic Cylinder Ontology Optimization 液壓缸本體優化
# ========================================
# Preload hydraulic cylinder ontology on startup
owl.hydraulic.preload-ontology=true
# Use lightweight model for hydraulic cylinders
owl.hydraulic.use-lightweight-model=true
# Maximum component suggestions to generate
owl.hydraulic.max-component-suggestions=50
# Enable hydraulic rules
owl.hydraulic.rules.enabled=true
# Maximum rules to apply
owl.hydraulic.max-rules=10

# ========================================
# Thread Pool Configuration 執行緒池設定
# ========================================
# For async reasoning operations
owl.reasoning.thread-pool.size=4
owl.reasoning.thread-pool.max-size=8
owl.reasoning.thread-pool.queue-capacity=100
owl.reasoning.thread-pool.keep-alive-seconds=60

# ========================================
# Cache Configuration 快取設定
# ========================================
# Enable caching for reasoning results
owl.reasoning.cache.enabled=true
# Cache TTL in minutes
owl.reasoning.cache.ttl-minutes=30
# Maximum cache size (number of entries)
owl.reasoning.cache.max-size=100

# ========================================
# CORS 設定
# ========================================
cors.allowed-origins=http://localhost:5173,http://localhost:5175,http://192.168.20.81:5173,http://192.168.20.81:5175,http://192.168.1.105:5175,http://192.168.40.169:5175

# ========================================
# JVM Memory Settings (建議的 JVM 啟動參數)
# ========================================
# Add these to your JVM startup command:
# -Xms512m                     初始堆記憶體
# -Xmx2048m                    最大堆記憶體
# -XX:MaxMetaspaceSize=256m    元空間大小
# -XX:MaxDirectMemorySize=512m 直接記憶體大小
# -XX:+UseG1GC                 使用 G1 垃圾收集器
# -XX:MaxGCPauseMillis=200     最大 GC 暫停時間
# -XX:+HeapDumpOnOutOfMemoryError 記憶體溢出時產生堆轉儲
# -XX:HeapDumpPath=./heap_dumps/  堆轉儲路徑

# ========================================
# 環境特定設定建議
# ========================================
# 開發環境：
# ORACLE_USERNAME=tw_test_01
# JPA_DDL_AUTO=create-drop (僅對 H2)
# JPA_SHOW_SQL=true
# H2_CONSOLE_ENABLED=true
# LOG_HIBERNATE_SQL=DEBUG

# 生產環境：
# ORACLE_USERNAME=tw
# JPA_DDL_AUTO=none
# JPA_SHOW_SQL=false
# H2_CONSOLE_ENABLED=false
# LOG_HIBERNATE_SQL=WARN
# H2_URL=jdbc:h2:file:./data/owldb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=Oracle

# ========================================
# 日誌文件配置 (Spring Boot 2.2+ 正確語法)
# ========================================
# 日誌文件路徑和名稱
logging.file.name=./logs/owl-application.log

# 滾動策略配置 (替代舊的 logging.file.* 屬性)
logging.logback.rollingpolicy.file-name-pattern=./logs/owl-application-%d{yyyy-MM-dd}-%i.log
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB

# 日誌格式
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n

# 應用程式日誌級別
logging.level.root=INFO
logging.level.com.jfc.owl=DEBUG